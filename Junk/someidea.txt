SymbolicC++;
Symbolic p("p"), q("q");
cout << df(cos(p[q]^2) - (q^2)*sin(q),q) << endl; // - 2*q*sin(q)-q^(2)*cos(q) -2*sin(p[q]^(2))*p[q]*df(p[q],q)
cout << integrate(ln(q), q) << endl;     // q*ln(q) - q


ViennaMath:

// some kind of definition of x and y as symbolic functions
diff( x + y, x ); // returns 1
diff( (2.0 - x) * (3.0 + y), y); // returns 2.0 - x


GiNaC:
symbol x("x"), y("y"), z("z");
ex P = pow(x, 5) + pow(x, 2) + y;

cout << P.diff(x,2) << endl;  // 20*x^3 + 2
cout << P.diff(y) << endl;    // 1
cout << P.diff(z) << endl;    // 0

Octave:
